#! ./node_modules/.bin/coffee



process.env.GA_SERVICE_ACCOUNT      = process.env.GA_SERVICE_ACCOUNT      || "901556670104.apps.googleusercontent.com"
process.env.GA_SERVICE_EMAIL        = process.env.GA_SERVICE_EMAIL        || "901556670104@developer.gserviceaccount.com"
process.env.GA_KEY_PATH             = process.env.GA_KEY_PATH             || "source/gsites-analytics-privatekey.pem"
process.env.MONGOLAB_URI            = process.env.MONGOLAB_URI            || "mongodb://gsite_app:temp_passw0rd@ds041327.mongolab.com:41327/heroku_app14575890"



_ = require 'underscore'
fs = require 'fs'
path = require 'path'
crypto = require 'crypto'
request = require 'request'
qs = require 'querystring'
googleapis = require 'googleapis'
mongoose = require 'mongoose'
async = require 'async'

###mongoose.connect process.env.MONGOLAB_URI
db = mongoose.connection
db.on 'error', console.error.bind console, 'connection error:'###



games    = require path.normalize __dirname + '/../source/models/games'
sites    = require path.normalize __dirname + '/../source/models/sites'

#sitesM = mongoose.model 'sites'
sitesM = sites.model
gamesM = games.model


update_game_analytics = (callback)->
    authorize (err, data)->
      unless err
        #Query the number of total visits for a month
        requestConfig =
          'ids': 'ga:73030585'
          'start-date': '2013-02-01'
          'end-date': '2013-06-01'
          'metrics': 'ga:pageviews,ga:timeOnPage,ga:bounces'
          'dimensions': 'ga:hostname,ga:pagePath'

        request
          method: 'GET'
          headers:
            'Authorization': 'Bearer ' + data.access_token
          uri: 'https://www.googleapis.com/analytics/v3/data/ga?' + qs.stringify requestConfig
        , (err, res, body)->
          data = JSON.parse body
          calls = []
          if data.error
            console.log data.error.errors
          else
            domains = _.uniq data.rows, false, (it)->it[0]
            domains = _.map domains, (it) -> it[0]            
            _.each domains, (domainName,i)->
              dn =  domainName.replace "www.", ""                          
              sitesM.getByDomain dn, (err, site)->
                unless err
                  gamesM.getAllBySiteId site._id, (err, games)->                    
                    unless err
                     
                      _.each games, (game,i)->                        
                        _.each data.rows, (stat)->                          
                          if (stat[0] is domainName) and (stat[1] is "/games/#{game.slug}")                             
                            calls.push ()->
                              game.pageviews = stat[2]
                              game.avg_time = stat[3]
                              game.bounce_rate = stat[4]
                              console.log 'here'
                              game.save()
                    else
                      console.log err
                else
                  console.log err 
            async.parallel calls, (err,result)->
              if err
                console.log err
              console.log 'success'
              mongoose.connection.close()
      else
        console.log err      
    


authorize = (cb)->
  now = parseInt Date.now() / 1000, 10

  authHeader =
    alg: 'RS256'
    typ: 'JWT'

  authClaimSet =
    iss  : process.env.GA_SERVICE_EMAIL
    scope: 'https://www.googleapis.com/auth/analytics.readonly'
    aud  : 'https://accounts.google.com/o/oauth2/token'
    iat  : now
    exp  : now + 60

  #Setup JWT source
  signatureInput = base64Encode(authHeader) + '.' + base64Encode authClaimSet

  #Generate JWT
  cipher = crypto.createSign 'RSA-SHA256'
  cipher.update signatureInput
  signature = cipher.sign readPrivateKey(), 'base64'
  jwt = signatureInput + '.' + urlEscape signature

  #Send request to authorize this application
  request
    method: 'POST'
    headers:
      'Content-Type': 'application/x-www-form-urlencoded'
    uri: 'https://accounts.google.com/o/oauth2/token'
    body: 'grant_type=' + escape('urn:ietf:params:oauth:grant-type:jwt-bearer') +
    '&assertion=' + jwt
  , (err, res, body)=>
    if err
      console.log err
      cb new Error err
    else
      gaResult = JSON.parse body
      if gaResult.error
        cb new Error gaResult.error
      else
        cb null, gaResult

urlEscape = (source)->
  source.replace(/\+/g, '-').replace(/\//g, '_').replace /\=+$/, ''

base64Encode = (obj)->
  encoded = new Buffer(JSON.stringify(obj), 'utf8').toString 'base64'
  urlEscape encoded

readPrivateKey = ->
  fs.readFileSync process.env.GA_KEY_PATH, 'utf8'

#update_game_analytics()
mongoose.connect process.env.MONGOLAB_URI, () ->
  update_game_analytics()
  #mongoose.connection.close()
